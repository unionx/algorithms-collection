#!/usr/bin/env racket
#lang racket

(define s "GCGTTGGCAAGTTTTGGATTCGAGGTTACAACTGGCTAAAGGCGCCAGAAACTAGGATGTCATCTAGCCGGCTGTTATTAGTTCGCCTGGTGCAGCGAGTCAGCGTTTTTGGTGACGTGTTTGGCTCGGGGCGTGGAGTAATACGGTCTGATCGGGTTGACGGCGACGAGCCTCGCGAAGTGCTAGTCCGGTGGGCGGCGTAGTCGTCTCCCAGGTGATTATCTATCCGCATACGATTTAGACAACAGACTAGAACCCTAAAGTCCTATAGCAGGAGTCGGAGGTTATCTGATACCCACCGACCCCTTAACTTACCTCTAAGAGCGGCAGTTAGTCTAGCACCTTAGGGACTTGCAGGACTTTACTGTCTATTGAGTCCGAGAAGTCCAATCGTTATCAGCGAGTTCCTCACGTTAGGAAATGTGCAGCAAGAAAGTTACGCCACCAGACTCATGTATAGGATTGGAGCCTAATTGAAGAGTTTCGTATATCATGCGCTAGGTTAACAGGGATGTTCCCCACTCGGTCAGGGGGTTACCGATCCTCAAGCGTGTGGTAACTGCTCATGCCTGGGTGCAAAGTAGCCGATGGGCTCATTTAAATGTACCCATCAAAAGGTGGATGACGTTCAGATGCCGTTGCGATGGCAGCACGCCGTGATCAGGTAGACGCAGGTGAAATCATTCGGCGCTCTGAGCAGTCACCGCACACGGCAACATGTTAAGACCGGGCTCACAAGCGACCAAACTGTACAAACCGAGATTAGACAGTCAGACTTAACACATCCGAAGTCTCTTTGTGCGTCAGGGTGTAAGTTTTAGACCTGATTCTAAAAGCGCAGTTATCACCTAAAAGATGTTTCACTCCATTCGTTTCAGACTGGCTATACACAATTGGGGAGGATGCCGTATAGAGAGTTTCGCGCTGTAACGGACCCGACTATCCAC")

(define complement-table
  (hash #\A #\T
        #\T #\A
        #\C #\G
        #\G #\C))

(define make-reverse-complement-string
  (lambda (s)
    (list->string
     (reverse
      (map (lambda (c)
             (hash-ref complement-table c))
           (string->list s))))))

(display (make-reverse-complement-string s))
(newline)
